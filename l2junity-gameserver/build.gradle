apply plugin: 'java'
apply plugin: 'distribution'
apply plugin: 'idea'

defaultTasks('distZip')

sourceCompatibility = '1.8'

sourceSets {
	scripts {
		java {
			srcDir('dist/game/data/scripts')
		}
	}
}

dependencies {
	compile(fileTree(dir: 'dist/libs', include: '*.jar'))
	compile project(':l2junity-geodriver')
	compile project(':l2junity-mmocore')
	
	compile(group: 'com.mchange', name: 'c3p0', version: '0.9.5-pre10')
	compile(group: 'com.sun.mail', name: 'javax.mail', version: '1.5.2')
	compile(group: 'org.bitlet', name: 'weupnp', version: '0.1.2')
	compile(group: 'io.netty', name: 'netty-all', version: '5.0.0.Alpha1')
	
	runtime(group: 'org.eclipse.jdt.core.compiler', name: 'ecj', version: '4.4')
	runtime(group: 'mysql', name: 'mysql-connector-java', version: '5.1.34')
}

def generalManifest = manifest {
	attributes('Built-By': System.getProperty('user.name'),
			'Built-Date': new Date(),
			'Implementation-URL': 'http://www.l2junity.org/',
			'Class-Path': configurations.runtime.collect({ '../libs/' + it.getName() }).join(' '))
}

jar {
	archiveName = 'l2jserver.jar'
	exclude('**/dbinstaller/**')
	exclude('**/loginserver/**')
	exclude('**/accountmanager/**')
	exclude('**/gsregistering/**')
	manifest {
		from(generalManifest)
		attributes('Main-Class': 'org.l2junity.gameserver.GameServer')
	}
}

task loginJar(type: Jar, dependsOn: classes) {
	from(sourceSets.main.output)
	archiveName = 'l2jlogin.jar'
	exclude('**/dbinstaller/**')
	exclude('**/gameserver/**')
	manifest {
		from(generalManifest)
		attributes('Main-Class': 'org.l2junity.loginserver.L2LoginServer')
	}
}

task configuratorJar(type: Jar, dependsOn: classes) {
	from(sourceSets.main.output)
	archiveName = 'L2J_Configurator.jar'
	include('**/configurator/**')
	include('**/i18n/**')
	include('**/images/**')
	exclude('**/accountmanager/**')
	exclude('**/dbinstaller/**')
	exclude('**/gameserver/**')
	exclude('**/gsregistering/**')
	exclude('**/log/**')
	exclude('**/loginserver/**')
	exclude('**/status/**')
	exclude('**/util/**')
	exclude('**/Config/**')
	exclude('**/L2DatabaseFactory/**')
	exclude('**/Server/**')
	manifest {
		from(generalManifest)
		attributes('Main-Class': 'org.l2junity.tools.configurator.ConfigUserInterface')
	}
}

task dbInstLsJar(type: Jar, dependsOn: classes) {
	from(sourceSets.main.output)
	archiveName = 'dbinst_ls.jar'
	include '**/dbinstaller/**'
	include '**/images/**'
	include '**/util/**'
	include '**/SQLFilter**'
	exclude '**/LauncherGS*'
	manifest {
		from(generalManifest)
		attributes('Main-Class': 'org.l2junity.tools.dbinstaller.LauncherLS')
	}
}

task dbInstGsJar(type: Jar, dependsOn: classes) {
	from(sourceSets.main.output)
	archiveName = 'dbinst_gs.jar'
	include('**/dbinstaller/**')
	include('**/images/**')
	include('**/util/**')
	include('**/SQLFilter**')
	exclude('**/LauncherLS*')
	manifest {
		from(generalManifest)
		attributes 'Main-Class': 'org.l2junity.tools.dbinstaller.LauncherGS'
	}
}

artifacts {
	archives loginJar, configuratorJar, dbInstLsJar, dbInstGsJar
}

distributions {
	main {
		contents {
			from('dist') {
				exclude('libs')
			}
			into('libs') {
				from(configurations.runtime)
			}
			into('game') {
				from(jar)
				from(configuratorJar)
			}
			into('login') {
				from(loginJar)
			}
			into('tools') {
				from(dbInstLsJar)
				from(dbInstGsJar)
			}
		}
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.2.1'
}
